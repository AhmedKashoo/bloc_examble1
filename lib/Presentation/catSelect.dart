import 'package:bloc_examble/Data/Model/DataModel.dart';
import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:multi_select_flutter/chip_display/multi_select_chip_display.dart';
import 'package:multi_select_flutter/dialog/mult_select_dialog.dart';
import 'package:multi_select_flutter/dialog/multi_select_dialog_field.dart';
import 'package:multi_select_flutter/util/multi_select_item.dart';

import '../Bloc/api_call_bloc.dart';
import '../Data/Model/DataModel.dart';
import 'component.dart';

class catList extends StatefulWidget {
  const catList({Key? key}) : super(key: key);

  @override
  State<catList> createState() => _catListState();
}

class _catListState extends State<catList> {
  @override
  void initState() {
    BlocProvider.of<ApiCallBloc>(context)..add(fetchData());
    super.initState();
  }
  @override
  Widget build(BuildContext context) {
    var T=TextEditingController();
    List<int>SelecTedValue=[];
    return BlocBuilder<ApiCallBloc, ApiCallState>(builder: (context, state){
      return Scaffold(

        appBar: AppBar(),
        body: Padding(
          padding: const EdgeInsets.all(8.0),

          child: Column(
            children: [
              if(state is ApiLoadedData)

                Column(

                  children: [
                  Container(
                    decoration: BoxDecoration(
                        color: Colors.blue,
                        borderRadius: BorderRadius.circular(12)
                    ),
                    child: MultiSelectDialogField(
                      initialValue:state.autogenerated.categoriesData!.map((e) => (e.id)).toList(),
                      items:state.apiTest.cats.map((e) => MultiSelectItem(e.id,e.name)).toList(),
                      chipDisplay: MultiSelectChipDisplay(),
                      onConfirm: (  e) {

                        SelecTedValue = e.cast<int>();
                      },

                    ),
                  ),
                  SizedBox(height: 10,),

                  DefaultFormField(
                      validate: (String ?v ) {  }, type: TextInputType.text,  label: 'منتج', controller: T..text=state.dataModel.description.toString()),
                  SizedBox(height: 10,),
                  defaultButton(function: (){
                    BlocProvider.of<ApiCallBloc>(context).add(PostEvent(4,state.dataModel.description.toString(),SelecTedValue));
                    print(SelecTedValue);
                    print(T.text);

                  }, text: "Done",)


                ],)


            ],
          ),
        ),
      );
    });

  }
}
